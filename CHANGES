Eve Changelog
=============

Here you can see the full list of changes between each Eve release.

Version 0.0.4
-------------

Not released yet.

- Support for default values in resource fields. The new 'default' keyword can
  now be used when defining a field rule set.

  'userlevel': {
    'type': 'integer', 
    'default': 1
    }

  When serving POST (create) requests, the 'userlevel' field (with a value of
  1) will be injected in documents lacking it. 
  
  Please note: currently default values are supported only for main document
  fields. Default values for fields in embedded documents will be ignored.

- Multiple API endpoints can now target the same database collection. For
  example now you can set both '/admins/' and '/users/' to read and write from
  the same collection on the db, 'people'.
 
  The new 'datasource' setting allows to explicitly link API resources to
  database collections. It is a dictionary with two allowed keys: 'source' and
  'filter'. 'source' dictates the database collection consumed by the resource.
  'filter' is the underlying query, applied by the API when retrieving and
  validating data for the resource.  

  'datasource': {
    'source': 'people', 
    'filter': {'userlevel': 1}
    }
  
  Previously, the resource name would dictate the linked datasource (and of
  course you could not have two resources with the same name). This remains
  the default behaviour: if you omit the 'datasource' setting for a resource,
  its name will be used to determine the database collection.

- It is now possibile to set predefined db filters for each resource. 

  'datasource': {
    'filter': {'username': {'$exists': True}}
    }
  
  In the example above the API endpoint will only expose (and update) documents
  with the 'username' field.

  Predefined filters run on top of user queries (GET requests with 'where'
  clauses) and standard conditional requests ('If-Modified-Since', etc.)

  Please note that datasource filters are applied on GET, PATCH and DELETE
  requests. If your resource allows for POST requests (document insertions),
  then you will probably want to set the validation rules accordingly (in our
  example, 'username' should probably be a required field).

- JSON-Datetime dependency removed.
- Support for Cerberus v0.0.3 and later.
- Support for Flask-PyMongo v0.2.0 and later.
- Repeated XML requests to the same endpoint could occasionally return an
  Internal Server Error (Fixes #8).

Version 0.0.3 
-------------

Released on January 22th 2013.

- XML rendering love. Lots of love.

- JSON links are always wrapped in a ``_links`` dictionary. Key values match
  the relation between the item being represented and the linked resource.

- Streamlined JSON responses.  
  
  Superflous ``response`` root key has been removed from JSON payloads. 

  GET requests to resource endpoints: items are now wrapped with an ``_items``
  list. 
  
  GET requests to item endpoints: item is now at root level, with no wrappers
  around it. 

- Support for API versioning through the new API_VERSION configuration setting.
- Boolean values in request forms are now correctly parsed.
- Tests now run under Python 2.6.


Version 0.0.2
-------------

Released on November 27th 2012.

- Homepage/api entry point resource links fixed. They had bad 'href'
  tags which also caused XML validation issues when processing responses
  (especially when accessing the API via browser).

- Version number in 'Server' response headers.

- Added support for DELETE at resource endpoints. Expected behavior:
  will delete all items in the collection. Disabled by default.

- :class:`eve.io.mongo.Validator` now supports :class:`~cerberus.Validator`
  signature, allowing for further subclassing.

Version 0.0.1
-------------

Released on November 20th 2012.

- First public preview release.
